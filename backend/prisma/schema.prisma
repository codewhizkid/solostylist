// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Stylist {
  id             String        @id @default(cuid())
  name           String
  email          String        @unique
  password       String
  bio            String?
  headshotUrl    String?
  font           String?
  primaryColor   String?
  secondaryColor String?
  tertiaryColor  String?
  tagline        String?
  logoUrl        String?

  services       Service[]
  availability   Availability[]
  settings       Settings?

  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model Service {
  id        String   @id @default(cuid())
  name      String
  price     Float
  duration  Int            // minutes
  stylist   Stylist  @relation(fields: [stylistId], references: [id])
  stylistId String
}

model Availability {
  id         String   @id @default(cuid())
  dayOfWeek  Int      // 0-6 (Sun-Sat) makes querying easier
  startTime  String   // "09:00"
  endTime    String   // "17:00"
  stylist    Stylist  @relation(fields: [stylistId], references: [id])
  stylistId  String
}

model Settings {
  id             String   @id @default(cuid())
  igHandle       String?
  fbPage         String?
  website        String?
  stylist        Stylist  @relation(fields: [stylistId], references: [id])
  stylistId      String   @unique
}// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Stylist {
  id             String        @id @default(cuid())
  name           String
  email          String        @unique
  password       String
  bio            String?
  headshotUrl    String?
  font           String?
  primaryColor   String?
  secondaryColor String?
  tertiaryColor  String?
  tagline        String?
  logoUrl        String?

  services       Service[]
  availability   Availability[]
  settings       Settings?

  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model Service {
  id        String   @id @default(cuid())
  name      String
  price     Float
  duration  Int            // minutes
  stylist   Stylist  @relation(fields: [stylistId], references: [id])
  stylistId String
}

model Availability {
  id         String   @id @default(cuid())
  dayOfWeek  Int      // 0-6 (Sun-Sat) makes querying easier
  startTime  String   // "09:00"
  endTime    String   // "17:00"
  stylist    Stylist  @relation(fields: [stylistId], references: [id])
  stylistId  String
}

model Settings {
  id             String   @id @default(cuid())
  igHandle       String?
  fbPage         String?
  website        String?
  stylist        Stylist  @relation(fields: [stylistId], references: [id])
  stylistId      String   @unique
}